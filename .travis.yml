language: c
jobs:
  include:
    - os: linux
      env: CMAKE_GENERATOR="Unix Makefiles"
      sudo: required
      before_script:
        - test -e /usr/bin/cmake || sudo ln -s $(which cmake) /usr/bin/cmake
        - bash <(curl -fsSL https://raw.githubusercontent.com/horta/zstd.install/master/install)
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=almosthere
          DO_CMD=sudo bash
    - os: osx
      env: CMAKE_GENERATOR="Unix Makefiles"
      before_script:
        - bash <(curl -fsSL https://raw.githubusercontent.com/horta/zstd.install/master/install)
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=almosthere
          DO_CMD=sudo bash
    - name: Build on windows
      os: windows
      env:
        - INCLUDE="/c/ProgramData/chocolatey/lib/zstandard/tools/include"
        - INCLUDE="/c/Program Files/zlib/include"
        - INCLUDE="/c/Program Files/athr/include"
        - LIB="/c/ProgramData/chocolatey/lib/zstandard/tools/dll"
        - LIB="/c/Program Files/zlib/lib"
        - LIB="/c/Program Files/athr/lib"
        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
      before_script:
        - choco install zstandard --no-progress -y
        - powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/horta/zlib.install/master/install.bat', 'install.bat')" && ./install.bat
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=almosthere bash
        - cp /c/ProgramData/chocolatey/lib/zstandard/tools/dll/libzstd.dll /c/Windows/system32/
        - cp /c/Program\ Files/zlib/bin/zlib.dll /c/Windows/system32/
        - cp /c/Program\ Files/athr/bin/athr.dll /c/Windows/system32/
    - name: Build on windows
      os: windows
      env:
        - INCLUDE="/c/ProgramData/chocolatey/lib/zstandard/tools/include"
        - INCLUDE="/c/Program Files/zlib/include"
        - INCLUDE="/c/Program Files/athr/include"
        - LIB="/c/ProgramData/chocolatey/lib/zstandard/tools/dll"
        - LIB="/c/Program Files/zlib/lib"
        - LIB="/c/Program Files/athr/lib"
        - CMAKE_GENERATOR=Ninja
      before_install:
        - choco install ninja zstandard --no-progress -y
        - powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/horta/zlib.install/master/install.bat', 'install.bat')" && ./install.bat
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=almosthere bash
        - cp /c/ProgramData/chocolatey/lib/zstandard/tools/dll/libzstd.dll /c/Windows/system32/
        - cp /c/Program\ Files/zlib/bin/libzlib.dll /c/Windows/system32/
        - cp /c/Program\ Files/athr/bin/athr.dll /c/Windows/system32/
addons:
  apt:
    packages:
      - cmake
script:
  - mkdir prefix
  - mkdir build.release
  - cd build.release
  - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/prefix
    ..
  - cmake --build . --config Release
  - ctest --output-on-failure -C Release
  - cmake --build . --config Release --target install
  - test -e $TRAVIS_BUILD_DIR/prefix/include/bgen/bgen.h
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/bgen/bgen-config.cmake
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/bgen/bgen-targets-release.cmake
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/bgen/bgen-targets.cmake
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then otool -l $TRAVIS_BUILD_DIR/prefix/lib/libbgen.dylib | grep -q LC_RPATH; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then test -e $TRAVIS_BUILD_DIR/prefix/lib/libbgen.so; fi
  - cd $TRAVIS_BUILD_DIR
  - git clean -xdfq
  - mkdir build.debug
  - cd build.debug
  - cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=ON ..
  - cmake --build . --config Debug
  - ctest --output-on-failure -C Debug
  - cd $TRAVIS_BUILD_DIR
  - git clean -xdfq
