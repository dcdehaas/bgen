#!/usr/bin/env bash

URL=https://raw.githubusercontent.com/limix/bgen/master/VERSION
VERSION=$(curl -s $URL)

echo "[0/5] Library(bgen==$VERSION)"

tmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'tmpdir'`
logfile="$tmpdir/bgen.log"
exec 3> "$logfile"

function cleanup
{
    exec 3>&-
    rm -rf "$tmpdir" >/dev/null 2>&1 || true
}

trap cleanup EXIT

function silent_run
{
    eval "$@ 2>&3 1>&3"
}

function do_then_sudo
{
    eval "$@"
    if [ $? != 0 ]; then
        eval "sudo $@"
    fi
}

function failed
{
    echo "FAILED."
    echo "[_/_] Log output from $logfile:"
    exec 3>&- && cat $logfile
    cleanup
    exit 1
}

function succeeded
{
    cleanup
}

FILE=bgen-$VERSION.tar.gz
DIR=bgen-$VERSION
URL=https://github.com/limix/bgen/archive/$VERSION.tar.gz

rm $FILE >/dev/null 2>&1 || true
rm -rf $DIR >/dev/null 2>&1 || true

echo -n "[1/5] Downloading... "
silent_run curl -o $FILE -L $URL
[ $? == 0 ] && echo "done." || { failed; exit 1; }

tar xzf $FILE && cd $DIR
mkdir build && cd build

echo -n "[2/5] Configuring... "
silent_run cmake ..
[ $? == 0 ] && echo "done." || { failed; exit 1; }

echo -n "[3/5] Compiling... "
silent_run make
[ $? == 0 ] && echo "done." || { failed; exit 1; }

echo -n "[4/5] Testing... "
silent_run make test
[ $? == 0 ] && echo "done." || { failed; exit 1; }

echo -n "[5/5] Installing... "
silent_run do_then_sudo make install
[ $? == 0 ] && echo "done." || { failed; exit 1; }

if type "ldconfig" >/dev/null 2>&1; then
    silent_run do_then_sudo ldconfig
fi

succeeded
